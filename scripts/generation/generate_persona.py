#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Persona generator for conversation apps
======================================

AI-powered diverse persona generation using LLM for natural variety.
"""

from __future__ import annotations

import argparse
import json
import os
import random
import time
import uuid

from datasets import load_dataset
from langchain_google_genai import ChatGoogleGenerativeAI
from pydantic import BaseModel, Field
from tqdm import tqdm


class Persona(BaseModel):
    reasoning: str = Field(
        description="与えられた多様な要素（年齢、職業、性格、趣味、生活環境、コミュニケーションスタイルなど）をどのように解釈し、組み合わせて一人の一貫性のある人物を構築したかの思考プロセス。矛盾する要素をどう創造的に統合したかについても記述する。"
    )
    name: str = Field(
        description="ペルソナの名前。日本人らしい自然な名前で、性別や年齢に適したもの。"
    )
    purpose: str = Field(
        description="アプリの使用目的。なぜこのアプリを使うのか、何を求めているのかを簡潔に。"
    )
    attitude: str = Field(
        description="アプリ使用時の態度や姿勢。どのような心持ちでアプリに向き合うか、どんな期待や不安を持っているか、使用頻度や時間の使い方、キャラクターに対する接し方などの態度。簡潔に。"
    )
    profile: str = Field(
        description="詳細なペルソナプロフィール。基本情報（年齢、性別、職業など）、性格特性、趣味・興味、生活環境、コミュニケーションスタイル、特別な背景や体験談などを含む、自然で一貫性のある人物像。Markdownのように構造化された形式で出力。"
    )


# Expanded diversity elements for richer persona generation
PERSONA_ELEMENTS = {
    # 基本属性の大幅拡充
    "age_groups": [
        "中学生",
        "高校1年生",
        "高校2年生",
        "高校3年生",
        "大学1年生",
        "大学2年生",
        "大学3年生",
        "大学4年生",
        "大学院生",
        "新卒社会人（22-24歳）",
        "若手社会人（25-29歳）",
        "中堅社会人（30-34歳）",
        "ベテラン社会人（35-39歳）",
        "管理職世代（40-44歳）",
        "中年世代（45-49歳）",
        "熟年世代（50-54歳）",
        "シニア世代（55-59歳）",
        "高齢者（60歳以上）",
    ],
    "genders": [
        "男性",
        "女性",
        "ノンバイナリー",
        "性別を明かしたくない",
        "流動的",
    ],
    # 職業の大幅拡充（現実的＋創造的）
    "occupations": [
        # 学生
        "中学生",
        "高校生",
        "大学生（文系）",
        "大学生（理系）",
        "大学生（芸術系）",
        "専門学校生",
        "大学院生",
        "留学生",
        "浪人生",
        "通信制高校生",
        # 伝統的職業
        "会社員（営業）",
        "会社員（事務）",
        "会社員（企画）",
        "会社員（人事）",
        "会社員（経理）",
        "会社員（総務）",
        "公務員（市役所）",
        "公務員（県庁）",
        "教師（小学校）",
        "教師（中学校）",
        "教師（高校）",
        "保育士",
        "看護師",
        "医師",
        "薬剤師",
        "弁護士",
        "警察官",
        "消防士",
        "銀行員",
        # IT・クリエイティブ
        "プログラマー",
        "システムエンジニア",
        "ウェブデザイナー",
        "グラフィックデザイナー",
        "ゲームクリエイター",
        "YouTuber",
        "VTuber",
        "ライター",
        "編集者",
        "カメラマン",
        "イラストレーター",
        "漫画家",
        "声優",
        "配信者",
        "動画編集者",
        # サービス業
        "店員（コンビニ）",
        "店員（カフェ）",
        "店員（書店）",
        "店員（服屋）",
        "美容師",
        "ネイリスト",
        "エステティシャン",
        "料理人",
        "バーテンダー",
        "ホテルスタッフ",
        "旅行代理店員",
        # 特殊・個性的職業
        "フリーランス（複数業）",
        "インフルエンサー",
        "占い師",
        "セラピスト",
        "パーソナルトレーナー",
        "ペットシッター",
        "家庭教師",
        "翻訳者",
        "通訳者",
        "研究者",
        "学芸員",
        "司書",
        "農業従事者",
        "漁業従事者",
        "職人",
        "芸術家",
        "音楽家",
        "俳優",
        "ダンサー",
        # 無職・その他
        "主婦",
        "主夫",
        "就職活動中",
        "転職活動中",
        "休職中",
        "アルバイト複数掛け持ち",
        "ニート",
        "退職者",
        "起業準備中",
        "資格勉強中",
    ],
    # 趣味・興味の大幅拡充
    "hobbies_interests": [
        # エンターテイメント
        "アニメ鑑賞",
        "映画鑑賞（邦画）",
        "映画鑑賞（洋画）",
        "ドラマ鑑賞（国内）",
        "ドラマ鑑賞（韓国）",
        "YouTube視聴",
        "TikTok視聴",
        "Netflix視聴",
        "漫画（少年）",
        "漫画（少女）",
        "漫画（青年）",
        "ライトノベル",
        "小説（純文学）",
        "小説（エンタメ）",
        "雑誌読み",
        # ゲーム
        "スマホゲーム",
        "据え置きゲーム",
        "PCゲーム",
        "レトロゲーム",
        "FPSゲーム",
        "RPGゲーム",
        "音ゲー",
        "パズルゲーム",
        "オンラインゲーム",
        "ボードゲーム",
        "カードゲーム",
        # 音楽
        "J-POP鑑賞",
        "K-POP鑑賞",
        "洋楽鑑賞",
        "クラシック鑑賞",
        "ジャズ鑑賞",
        "ロック鑑賞",
        "EDM鑑賞",
        "ボカロ鑑賞",
        "楽器演奏（ピアノ）",
        "楽器演奏（ギター）",
        "楽器演奏（ベース）",
        "楽器演奏（ドラム）",
        "楽器演奏（管楽器）",
        "作詞作曲",
        "DTM",
        "カラオケ",
        "ライブ鑑賞",
        "コンサート鑑賞",
        # アクティブ
        "散歩",
        "ジョギング",
        "筋トレ",
        "ヨガ",
        "ピラティス",
        "水泳",
        "サイクリング",
        "登山",
        "キャンプ",
        "釣り",
        "スキー",
        "スノボ",
        "サーフィン",
        "ダンス",
        "ボクシング",
        "格闘技",
        "球技全般",
        "テニス",
        "卓球",
        "バドミントン",
        # クリエイティブ
        "イラスト",
        "絵画",
        "デジタルアート",
        "写真撮影",
        "動画制作",
        "動画編集",
        "ブログ執筆",
        "小説執筆",
        "詩作",
        "手芸",
        "編み物",
        "裁縫",
        "アクセサリー作り",
        "陶芸",
        "書道",
        "折り紙",
        "DIY",
        "模型制作",
        "フィギュア制作",
        # 学習・知的活動
        "語学学習（英語）",
        "語学学習（中国語）",
        "語学学習（韓国語）",
        "語学学習（その他）",
        "資格取得",
        "読書（ビジネス書）",
        "読書（自己啓発）",
        "読書（専門書）",
        "オンライン学習",
        "プログラミング学習",
        "投資・株式",
        "暗号資産",
        "副業研究",
        "起業準備",
        # 趣味コレクション・オタク活動
        "アイドル追っかけ",
        "声優ファン活動",
        "同人活動",
        "コスプレ",
        "痛車・痛バッグ",
        "フィギュア収集",
        "プラモデル",
        "トレーディングカード",
        "切手収集",
        "古銭収集",
        "ヴィンテージ収集",
        "レコード収集",
        "本収集",
        "ゲーム収集",
        # 生活・日常
        "料理",
        "お菓子作り",
        "パン作り",
        "カフェ巡り",
        "食べ歩き",
        "グルメ探索",
        "ワイン",
        "日本酒",
        "コーヒー",
        "紅茶",
        "お茶",
        "ガーデニング",
        "観葉植物",
        "ペット飼育",
        "インテリア",
        "掃除・整理整頓",
        "ミニマリスト",
        "ファッション",
        "コスメ",
        "美容",
        "ネイル",
        "ヘアアレンジ",
        "ダイエット",
        "健康管理",
        # 外出・社交
        "旅行（国内）",
        "旅行（海外）",
        "一人旅",
        "ドライブ",
        "電車旅",
        "テーマパーク",
        "動物園・水族館",
        "美術館・博物館",
        "神社仏閣巡り",
        "温泉",
        "マッサージ",
        "ショッピング",
        "友達と遊ぶ",
        "飲み会",
        "バーベキュー",
        "ピクニック",
        "花見",
        "祭り・イベント",
        # 特殊・ニッチ
        "占い",
        "スピリチュアル",
        "瞑想",
        "哲学",
        "心理学",
        "歴史",
        "地理",
        "天体観測",
        "気象観測",
        "鉄道",
        "飛行機",
        "車・バイク",
        "船",
        "軍事",
        "都市計画",
        "建築",
        "廃墟探索",
        "心霊スポット",
        "UMA・オカルト",
        "都市伝説",
        "怖い話",
        "推理・謎解き",
        "脱出ゲーム",
    ],
    # アプリ使用目的の拡充
    "app_purposes": [
        # エンターテイメント
        "純粋な娯楽として",
        "暇つぶしとして",
        "ストレス発散として",
        "気分転換として",
        "現実逃避として",
        "癒しを求めて",
        "笑いを求めて",
        "感動体験を求めて",
        "新鮮な体験を求めて",
        "非日常感を味わうために",
        # 社交・コミュニケーション
        "孤独感を紛らわすために",
        "会話相手が欲しくて",
        "友達感覚で話したくて",
        "誰かに話を聞いてもらいたくて",
        "コミュニケーション練習として",
        "人とのやりとりが恋しくて",
        "社交性を身につけるため",
        "話術を磨くため",
        "相手の気持ちを理解する練習として",
        # 学習・成長
        "日本語学習の一環として",
        "語学練習として",
        "敬語の練習として",
        "ビジネス会話の練習として",
        "コミュニケーション能力向上のため",
        "社会勉強として",
        "人間観察として",
        "心理学の勉強として",
        "相談スキル向上のため",
        # 自己表現・創造
        "自分の考えを整理するため",
        "感情を言語化する練習として",
        "自己表現の場として",
        "創作のインスピレーションを得るため",
        "ストーリー作りの参考として",
        "キャラクター研究として",
        "ロールプレイを楽しむため",
        "演技の練習として",
        "アドリブ力向上のため",
        # 精神的サポート
        "悩み相談をするため",
        "愚痴を聞いてもらうため",
        "精神的支えを求めて",
        "励ましてもらうため",
        "共感してもらうため",
        "理解者を求めて",
        "判断に迷った時の相談相手として",
        "背中を押してもらうため",
        "客観的意見を聞くため",
        # 特別な用途
        "恋愛相談をするため",
        "恋愛感情の練習として",
        "デートの予行練習として",
        "告白の練習として",
        "失恋の傷を癒すため",
        "理想の相手像を探るため",
        "恋愛シミュレーションとして",
        # 仕事・実用的
        "仕事の相談をするため",
        "転職について相談するため",
        "人間関係の悩みを相談するため",
        "プレゼンの練習として",
        "面接の練習として",
        "営業トークの練習として",
        "接客スキル向上のため",
        "クレーム対応の練習として",
        # 趣味関連
        "趣味について語り合うため",
        "推し活の話をするため",
        "ゲームの攻略相談をするため",
        "作品の感想を共有するため",
        "創作活動の相談をするため",
        "技術的な質問をするため",
        "おすすめを教えてもらうため",
        # 日常・ライフスタイル
        "日記代わりとして",
        "今日の出来事を話すため",
        "料理のレシピを相談するため",
        "ファッションの相談をするため",
        "健康管理の相談をするため",
        "家事の相談をするため",
        "育児の相談をするため",
        "介護の相談をするため",
        "ペットの相談をするため",
        "旅行計画の相談をするため",
    ],
    # 生活環境・状況の拡充
    "living_environments": [
        # 住居形態
        "一人暮らし（ワンルーム）",
        "一人暮らし（1DK以上）",
        "実家暮らし（両親と）",
        "実家暮らし（祖父母と）",
        "実家暮らし（三世代）",
        "恋人との同棲",
        "友人とのシェアハウス",
        "学生寮",
        "社員寮",
        "夫婦二人暮らし",
        "核家族（子供あり）",
        "単親世帯",
        "パートナーと別居中",
        # 地域・環境
        "都市部中心地",
        "都市部郊外",
        "地方都市",
        "田舎・農村部",
        "海沿いの町",
        "山間部",
        "新興住宅地",
        "下町",
        "学生街",
        "オフィス街近く",
        "商業地区",
        "住宅地",
        "団地",
        "マンション",
        "一戸建て",
        # 経済状況
        "経済的に余裕がある",
        "経済的に普通",
        "経済的にやや厳しい",
        "経済的に厳しい",
        "奨学金で生活",
        "親の援助で生活",
        "アルバイトで生計",
        "副業で収入補填",
        "投資収入もある",
        "借金がある",
    ],
    # 時間的制約・生活リズムの拡充
    "time_lifestyle": [
        # 忙しさレベル
        "非常に忙しい（睡眠不足）",
        "忙しい（平日は余裕なし）",
        "普通（平日夜と週末に時間）",
        "やや余裕がある",
        "時間に余裕がある",
        "暇を持て余している",
        # 生活リズム
        "朝型人間（早寝早起き）",
        "夜型人間（深夜活動）",
        "不規則な生活",
        "シフト勤務",
        "在宅ワーク中心",
        "リモートワーク併用",
        "平日と週末で生活リズムが違う",
        "昼夜逆転",
        "24時間勤務あり",
        # 特殊な時間状況
        "転職活動中で時間がある",
        "病気療養中で時間がある",
        "育児で細切れ時間しかない",
        "介護で時間が不規則",
        "受験勉強で忙しい",
        "卒論・修論で忙しい",
        "資格試験勉強中",
        "創作活動で夜更かし",
        "副業で時間がない",
        "趣味に時間を費やしている",
    ],
    # コミュニケーションスタイルの拡充
    "communication_styles": [
        # 基本的傾向
        "おしゃべり好きで積極的",
        "聞き上手で受け身",
        "バランス型（話すのも聞くのも好き）",
        "質問魔（何でも聞きたがる）",
        "話題提供が得意",
        "相槌上手",
        "リアクション上手",
        "感情表現豊か",
        "論理的で冷静",
        "直感的で感覚派",
        # 文体・話し方
        "丁寧語で話す",
        "敬語を正しく使う",
        "タメ口で親しみやすく",
        "方言が出る",
        "若者言葉を使う",
        "絵文字・顔文字多用",
        "スタンプをよく送る",
        "短文で簡潔に",
        "長文で詳しく",
        "一文が長い",
        "箇条書きが好き",
        # 会話の特徴
        "話題をよく変える",
        "一つのテーマを深掘り",
        "体験談をよく話す",
        "理論・知識を語りたがる",
        "感想・意見をよく言う",
        "アドバイスをしたがる",
        "相談を持ちかける",
        "愚痴をこぼしがち",
        "ポジティブ発言が多い",
        "ネガティブになりがち",
        "ツッコミが得意",
        "ボケるのが好き",
        "皮肉・ジョークが多い",
        "真面目一辺倒",
        # 特殊なクセ
        "語尾に特徴がある",
        "口癖がある",
        "同じ話を繰り返す",
        "突然関係ない話をする",
        "相手の話を深読みする",
        "質問に質問で返す",
        "例え話が多い",
        "引用・名言をよく使う",
        "数字やデータを重視",
        "感覚的な表現が多い",
        "オノマトペを多用",
        "専門用語を使いがち",
        "カタカナ語を多用",
        "古い言い回しを使う",
        "流行語を使いたがる",
    ],
    # 性格特性の大幅拡充
    "personality_traits": [
        # ビッグファイブ関連
        "外向的で社交的",
        "内向的で一人の時間が好き",
        "協調性が高く人に合わせがち",
        "独立心が強く自分の道を行く",
        "真面目で責任感が強い",
        "自由奔放でマイペース",
        "新しいことに積極的",
        "安定志向で変化を嫌う",
        "感情の起伏が激しい",
        "いつも冷静で落ち着いている",
        # 認知スタイル
        "直感的で感覚派",
        "論理的で分析派",
        "楽観的で前向き",
        "悲観的で慎重",
        "完璧主義で細かい",
        "大雑把で気にしない",
        "計画的で準備万端",
        "行き当たりばったり",
        "集中力が高い",
        "飽きっぽい",
        # 対人関係
        "人見知りしない",
        "人見知りが激しい",
        "リーダーシップがある",
        "フォロワー気質",
        "世話好きで面倒見がいい",
        "ドライで距離を置く",
        "共感力が高い",
        "他人に無関心",
        "気を遣いすぎる",
        "空気を読まない",
        # 感情的特徴
        "喜怒哀楽がはっきり",
        "感情を表に出さない",
        "涙もろい",
        "めったに泣かない",
        "怒りっぽい",
        "温厚で滅多に怒らない",
        "プライドが高い",
        "謙虚で控えめ",
        "自信家",
        "自己肯定感が低い",
        # 行動特性
        "チャレンジ精神旺盛",
        "保守的で慎重",
        "衝動的で思い立ったら即行動",
        "石橋を叩いて渡る",
        "継続力がある",
        "三日坊主",
        "負けず嫌い",
        "争いを避ける",
        "好奇心旺盛",
        "興味の幅が狭い",
        # 特殊な特徴
        "ツンデレ",
        "天然ボケ",
        "毒舌",
        "ポーカーフェイス",
        "表情豊か",
        "ナルシスト",
        "自虐的",
        "お調子者",
        "クール",
        "ムードメーカー",
        "仕切りたがり",
        "優柔不断",
        "即断即決",
        "心配性",
        "能天気",
        "ロマンチスト",
        "現実主義者",
        "理想主義者",
        "功利主義者",
    ],
    # アプリ使用時の態度・姿勢の多様性要素
    "app_attitudes": [
        # 基本的なスタンス
        "真剣にコミュニケーションを取りたい",
        "カジュアルに楽しみたい",
        "リラックスして気軽に",
        "慎重で様子見をしながら",
        "積極的にガンガン話しかける",
        "受け身で相手のペースに合わせる",
        "実験的に色々試してみたい",
        "ルーティン化して習慣にしたい",
        # 期待・動機
        "現実的な相談相手を求めている",
        "理想的な関係性を築きたい",
        "エンターテイメントとして楽しみたい",
        "学習・成長の機会として活用したい",
        "癒しや安らぎを求めている",
        "刺激や新鮮さを求めている",
        "安定した関係を築きたい",
        "時々だけ特別な時間として楽しみたい",
        # 使用頻度・時間
        "毎日決まった時間に話したい",
        "気が向いた時にふらっと話しかける",
        "ストレスが溜まった時の逃げ場として",
        "暇な時間の有効活用として",
        "短時間でサクッと済ませたい",
        "じっくり長時間会話を楽しみたい",
        "ながら作業の相手として",
        "集中して向き合う時間として",
        # キャラクターとの関係性
        "友達のような対等な関係を望む",
        "頼れる先輩・後輩のような関係",
        "恋人のような親密な関係",
        "家族のような安心できる関係",
        "先生と生徒のような学習関係",
        "相談者とカウンセラーのような関係",
        "エンターテイナーと観客のような関係",
        "ペットのような癒し系関係",
        # コミュニケーションスタイル
        "本音で率直に話したい",
        "建前や社交辞令も交えながら",
        "感情豊かに表現したい",
        "冷静で論理的に話したい",
        "プライベートな話もオープンに",
        "表面的な話題で十分",
        "深い話題を掘り下げたい",
        "軽い雑談を楽しみたい",
        # 技術・機能への態度
        "AI技術に興味津々",
        "技術的なことは気にせず自然に",
        "機能を使いこなしたい",
        "シンプルな機能で十分",
        "新機能を積極的に試したい",
        "慣れた機能だけ使いたい",
        "カスタマイズを楽しみたい",
        "デフォルト設定で満足",
        # 不安・懸念
        "個人情報の扱いが心配",
        "依存しすぎないか不安",
        "現実の人間関係への影響が心配",
        "時間を使いすぎないか心配",
        "お金がかかりすぎないか心配",
        "周りの人にバレたくない",
        "飽きてしまわないか心配",
        "期待通りの体験ができるか不安",
        # 特別な使い方
        "創作活動のインスピレーション源として",
        "語学学習のパートナーとして",
        "ロールプレイの相手として",
        "悩み相談の練習相手として",
        "プレゼンテーションの練習相手として",
        "日記を聞いてもらう相手として",
        "愚痴を聞いてもらう相手として",
        "褒めてもらう相手として",
        "励ましてもらう相手として",
        "一緒に何かを考える相手として",
        # 継続性・発展性
        "長期的な関係を築きたい",
        "短期的な利用で十分",
        "成長や変化を楽しみたい",
        "安定した一定の関係を維持したい",
        "複数のキャラクターと関係を築きたい",
        "一つのキャラクターと深く関わりたい",
        "季節や気分で使い分けたい",
        "特定の目的が達成されたら卒業したい",
        # 学習・適応スタイル
        "試行錯誤しながら覚えたい",
        "マニュアルを読んでから使いたい",
        "他のユーザーの使い方を参考にしたい",
        "自分なりの使い方を見つけたい",
        "おすすめされた使い方を試したい",
        "基本的な使い方で満足",
        "上級者向けの使い方に挑戦したい",
        "シンプルで分かりやすい使い方を好む",
        # 消極的・無関心な態度
        "正直あまり興味がない",
        "なんとなく試してみただけ",
        "期待値は低めに設定している",
        "別にハマらなくてもいいと思っている",
        "暇つぶし程度にしか考えていない",
        "すぐに飽きそうな予感がしている",
        "他に楽しいことがあればすぐやめる",
        "流行りだから一応触ってみる程度",
        "友達に勧められて仕方なく",
        "無料だから試してみるだけ",
        # ぶっきらぼう・素っ気ない態度
        "必要最小限の会話で済ませたい",
        "無駄な会話は避けたい",
        "効率重視で要点だけ話したい",
        "愛想を振りまく気はない",
        "素直に反応するのは恥ずかしい",
        "クールに距離を保ちたい",
        "感情的になるのは嫌い",
        "淡々と会話を進めたい",
        "親しくなりすぎるのは避けたい",
        "お世辞や建前は言いたくない",
        # 恋愛ロールプレイ関連
        "恋人のように甘い会話がしたい",
        "理想の恋愛関係を体験したい",
        "ときめきや胸キュンを求めている",
        "告白やプロポーズの練習をしたい",
        "恋愛経験を積みたい",
        "理想の相手像を探求したい",
        "恋愛シミュレーションとして楽しみたい",
        "デートの会話を楽しみたい",
        "恋愛相談を気軽にしたい",
        "恋愛ドラマのような会話を楽しみたい",
        "初恋のような純粋な気持ちを味わいたい",
        "大人の恋愛会話を楽しみたい",
        "遠距離恋愛のような関係を楽しみたい",
        "片思いの相談相手として利用したい",
        "失恋から立ち直る支えとして",
        # 特殊な関係性の探求
        "年上・年下の関係を楽しみたい",
        "師弟関係のような会話を求める",
        "ライバル関係で刺激し合いたい",
        "保護者的な関係を求める",
        "依存関係を築きたい",
        "対等なパートナーシップを築きたい",
        "主従関係のような会話を楽しみたい",
        "兄弟姉妹のような親しみやすい関係",
        "ペットのような愛らしい関係",
        "秘密を共有する特別な関係",
        # 現実逃避・ファンタジー要素
        "現実では味わえない体験がしたい",
        "理想の世界に浸りたい",
        "異世界やファンタジーの世界観を楽しみたい",
        "普段とは違う自分を演じたい",
        "現実の悩みを忘れたい",
        "夢や妄想の世界を共有したい",
        "非現実的な設定を楽しみたい",
        "物語の主人公になった気分を味わいたい",
        "魔法や超能力の世界を体験したい",
        "歴史上の人物との会話を楽しみたい",
        # 探求・実験的態度
        "AIの限界を試してみたい",
        "どこまで人間らしいか確かめたい",
        "変わった会話を試してみたい",
        "予想外の反応を引き出したい",
        "議論や討論を楽しみたい",
        "哲学的な話題を深掘りしたい",
        "創作活動のアイデア出しをしたい",
        "知識の幅を広げたい",
        "新しい視点を得たい",
        "自分の考えを整理したい",
        # ネガティブ・批判的態度
        "最初から期待していない",
        "どうせ期待外れだと思っている",
        "文句を言いながら使っている",
        "粗探しをしてしまう",
        "比較的厳しい目で見ている",
        "完璧を求めてしまう",
        "すぐに不満を感じてしまう",
        "他のサービスと比較してしまう",
        "お金を払う価値があるか疑っている",
        "時間の無駄になるかもしれないと思っている",
        # 秘密主義・プライバシー重視
        "身バレは絶対に避けたい",
        "個人情報は一切教えたくない",
        "匿名性を保ちたい",
        "リアルな話は避けたい",
        "架空の設定で会話したい",
        "プライベートには踏み込まれたくない",
        "表面的な会話で十分",
        "深い関係は築きたくない",
        "一定の距離を保ちたい",
        "秘密を持ちたい",
        # 衝動的・気まぐれな態度
        "その時の気分で使い方を変える",
        "飽きやすく続かない",
        "突然やめてしまうかもしれない",
        "思いつきで話題を変える",
        "予定を立てるのが嫌い",
        "ルールに縛られたくない",
        "自由気ままに使いたい",
        "型にはまった会話は嫌い",
        "予測不可能な展開を好む",
        "即興で楽しみたい",
        # 完璧主義・こだわり強め
        "理想通りの反応を求める",
        "細かいところまで気になる",
        "設定の矛盾は許せない",
        "クオリティにはうるさい",
        "期待値が高すぎる",
        "妥協したくない",
        "最高の体験を求める",
        "他人にも同じレベルを求める",
        "中途半端は嫌い",
        "納得いくまで続ける",
        # 社交的・コミュニティ志向
        "他のユーザーと交流したい",
        "みんなでワイワイ楽しみたい",
        "流行に敏感でいたい",
        "人気のある使い方を真似したい",
        "SNSでシェアしたい",
        "友達と一緒に楽しみたい",
        "コミュニティの一員になりたい",
        "情報交換をしたい",
        "仲間を見つけたい",
        "みんなに認められたい",
        # 独占欲・所有欲
        "自分だけの特別な関係を築きたい",
        "他の人には教えたくない",
        "独り占めしたい",
        "特別扱いされたい",
        "優先的に構ってもらいたい",
        "VIP待遇を期待している",
        "他のユーザーより特別でありたい",
        "独自のカスタマイズを楽しみたい",
        "オリジナリティを重視する",
        "誰とも被らない体験がしたい",
    ],
}


def create_persona_prompt() -> str:
    """
    拡充された要素を使い、LLMがペルソナを生成するためのプロンプトを作成する。
    """
    # 要素をランダムに選択
    selected_age = random.choice(PERSONA_ELEMENTS["age_groups"])
    selected_gender = random.choice(PERSONA_ELEMENTS["genders"])
    selected_occupation = random.choice(PERSONA_ELEMENTS["occupations"])
    selected_hobbies = random.sample(
        PERSONA_ELEMENTS["hobbies_interests"], random.randint(3, 6)
    )
    selected_app_purposes = random.sample(
        PERSONA_ELEMENTS["app_purposes"], random.randint(2, 4)
    )
    selected_living_env = random.choice(PERSONA_ELEMENTS["living_environments"])
    selected_time_lifestyle = random.choice(PERSONA_ELEMENTS["time_lifestyle"])
    selected_comm_styles = random.sample(
        PERSONA_ELEMENTS["communication_styles"], random.randint(2, 4)
    )
    selected_personality = random.sample(
        PERSONA_ELEMENTS["personality_traits"], random.randint(3, 6)
    )
    selected_app_attitudes = random.sample(
        PERSONA_ELEMENTS["app_attitudes"], random.randint(3, 5)
    )

    # 名前データセットから名前を選択
    names = load_dataset("Spiral-AI/names", split="train")
    suggested_name = random.choice(names["name"])

    prompt = f"""
あなたは人間心理と多様性を深く理解する、才能あるペルソナデザイナーです。
あなたの仕事は、以下のランダムに与えられた多様な要素を組み合わせて、一人のリアルで魅力的な「会話アプリユーザー」のペルソナを構築することです。

### Step 1: ペルソナデザイナーとしての思考

まず、以下の【入力要素】を分析してください。
いくつかの要素は互いに矛盾しているかもしれません。その矛盾こそが、ユニークで人間らしいペルソナを生むチャンスです。
どの要素を主軸にし、どの要素を補助的に使い、あるいはどの要素を創造的に解釈し直すか、あなたの思考プロセスを整理してください。

**基本設定:**
- **年齢層:** {selected_age}
- **性別:** {selected_gender}
- **職業:** {selected_occupation}
- **趣味・興味:** {", ".join(selected_hobbies)}
- **アプリ使用目的:** {", ".join(selected_app_purposes)}
- **生活環境:** {selected_living_env}
- **時間・ライフスタイル:** {selected_time_lifestyle}
- **コミュニケーションスタイル:** {", ".join(selected_comm_styles)}
- **性格特性:** {", ".join(selected_personality)}
- **アプリ使用態度:** {", ".join(selected_app_attitudes)}
- **名前の候補:** {suggested_name}（変更可能）

### Step 2: 人物像の構築

次に、Step 1で練り上げたプランに基づき、具体的な「ペルソナ」を構築してください。
以下の点を考慮して、一貫性があり、リアルで、共感できる人物像を作り上げてください：

1. **基本情報の整合性**: 年齢、職業、生活環境の組み合わせが自然であること
2. **心理的一貫性**: 性格特性、コミュニケーションスタイル、趣味が互いに支え合っていること
3. **生活の具体性**: 日常生活、時間の使い方、人間関係が具体的にイメージできること
4. **アプリ使用の動機**: なぜ会話アプリを使うのか、どんな会話を求めているのかが明確であること
5. **アプリ使用態度の具体性**: どのような心持ちでアプリを使用するか、期待や不安、使用パターンが具体的であること
6. **個性と魅力**: 他の人とは違う、その人らしい特徴やエピソードがあること

### Step 3: 最終的な出力

最後に、以下のPydanticモデルの形式に従って、あなたの思考プロセスと完成したペルソナを出力してください。

- **`reasoning`:** Step 1のあなたの思考プロセスを記述します。なぜそのように要素を組み合わせたのか、矛盾をどう解決したのかを具体的に説明してください。
- **`name`:** ペルソナの名前。年齢や性別に適した日本人らしい自然な名前。
- **`purpose`:** アプリの使用目的。なぜこのアプリを使うのか、何を求めているのかを具体的に記述してください。
- **`attitude`:** アプリ使用時の態度や姿勢。どのような心持ちでアプリに向き合うか、どんな期待や不安を持っているか、使用頻度や時間の使い方、キャラクターに対する接し方など、アプリとの関わり方について具体的に記述してください。
- **`profile`:** 詳細なペルソナプロフィール。基本情報、性格、趣味、生活環境、特別な背景やエピソードなどを含んだ、Markdownのように構造化された形式で出力してください。

注意事項:
- ステレオタイプに頼らず、ユニークで個性的な人物を作ってください
- 各フィールドは自然な文章で、箇条書きではなく物語的に記述してください
- その人の声や話し方、考え方が伝わってくるような、生き生きとした描写を心がけてください
- アプリ使用態度は、その人の性格や生活状況と一貫性のある具体的なものにしてください
"""
    return prompt


def main():
    parser = argparse.ArgumentParser(
        description="AI-powered diverse persona generation for conversation apps"
    )
    parser.add_argument("-n", "--num_personas", type=int, default=100)
    parser.add_argument("-b", "--batch_size", type=int, default=10)
    parser.add_argument("-o", "--output_dir", type=str, default="data/personas")
    args = parser.parse_args()

    model = ChatGoogleGenerativeAI(
        model="gemini-2.5-pro",
        temperature=0.8,
        max_tokens=8192,
        api_key=os.getenv("GEMINI_API_KEY"),
    ).with_structured_output(Persona)

    # 出力ディレクトリの作成
    os.makedirs(args.output_dir, exist_ok=True)

    # tqdmを使って進捗バーを表示
    pbar = tqdm(total=args.num_personas, desc="ペルソナ生成中")

    # 全体の件数をバッチサイズで区切ってループ
    for i in range(0, args.num_personas, args.batch_size):
        batch_prompts = []

        # 1バッチ分のプロンプトを生成
        for j in range(min(args.batch_size, args.num_personas - i)):
            persona_prompt = create_persona_prompt()
            batch_prompts.append(persona_prompt)

        try:
            # バッチ処理を実行
            results: list[Persona] = model.batch(batch_prompts)

            # 結果を個別のファイルに保存
            for k, persona_result in enumerate(results):
                output_path = os.path.join(
                    args.output_dir, f"persona_{uuid.uuid4()}.json"
                )

                with open(output_path, "w", encoding="utf-8") as f:
                    data = persona_result.model_dump()
                    reasoning = data.pop("reasoning")
                    data["metadata"] = {"reasoning": reasoning}

                    json.dump(data, f, ensure_ascii=False, indent=2)

        except Exception as e:
            print(
                f"バッチ処理中にエラーが発生しました（{i}から{i + min(args.batch_size, args.num_personas - i) - 1}番目）: {e}"
            )
            print("5秒待機して次のバッチに進みます...")
            time.sleep(5)
            # エラーが発生したバッチの分も進捗バーを進める
            pbar.update(min(args.batch_size, args.num_personas - i))
            continue  # エラーが起きても処理を続ける

        # 進捗バーを更新
        pbar.update(min(args.batch_size, args.num_personas - i))

    pbar.close()
    print(
        f"{args.num_personas}件のペルソナ生成が完了しました。出力先: '{args.output_dir}'"
    )


if __name__ == "__main__":
    main()
